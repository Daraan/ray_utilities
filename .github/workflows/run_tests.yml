# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  install-python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Python setup and install
        uses: ./.github/actions/cached-python-setup
        with:
          python-version: '3.10'
          install-args: .[test]
          use-pip-cache: true

  test-basic-and-non-tuner:
    needs: install-python
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Python setup and install
      uses: ./.github/actions/cached-python-setup
      with:
        python-version: '3.10'
        install-args: .[test]
        use-pip-cache: false
    - name: Test basic
      run: |
        source .venv/bin/activate
        export KEEP_MAX_DIFF=1
        export DISABLE_BREAKPOINTS=1
        # Run basic tests. If these fail others likely fail as well
        pytest -xv -m basic
    - name: Test with pytest
      run: |
        source .venv/bin/activate
        export KEEP_MAX_DIFF=1
        export DISABLE_BREAKPOINTS=1
        # Split tests because of deadlock
        pytest -k "not test_trainable" -m "not basic" -v -x --fast
  
  test-tuner-and-trainable:
    needs: install-python
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Python setup and install
      uses: ./.github/actions/cached-python-setup
      with:
        python-version: '3.10'
        install-args: .[test]
        use-pip-cache: false
    - name: Test trainable 1/2 (might deadlock)
      run: |
        source .venv/bin/activate
        pytest -k "test_validate_save_restore" -v --fast --timeout_method=thread
        pytest -m "not basic" -k "test_trainable and not test_tuner_checkpointing and not test_validate_save_restore" -v --fast
    - name: Test trainable with Tuner 2/2 (might deadlock)
      run: |
        source .venv/bin/activate
        pytest -k "test_tuner_checkpointing" -v --fast --timeout_method=thread
    - name: Test trainable multiple EnvRunners 1/2
      run: |
        source .venv/bin/activate
        pytest -m "not basic" -k "test_trainable and not test_tuner_checkpointing and not test_validate_save_restore"  -v --timeout_method=thread --mp-only
    - name: Test trainable multiple EnvRunners with Tuner 2/2 (might deadlock)
      run: |
        source .venv/bin/activate
        pytest -k "TestMetricsRestored and test_with_tuner" --mp-only
        pytest -k "test_tuner_checkpointing" -v --mp-only --timeout_method=thread
  
  pytest_minimal:
    runs-on: ubuntu-latest
    needs: install-python
    steps:
      - uses: actions/checkout@v4
      - name: Python setup and install
        uses: ./.github/actions/cached-python-setup
        with:
          python-version: '3.10'
          install-args: '-U . pyright'
          use-pip-cache: false
      - name: Run pyright minimally
        run: |
          source .venv/bin/activate
          pyright -p .basic_pyright_check.json
