# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:

  test-standard-and-non-tuner-fast:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Python setup and install
      uses: ./.github/actions/cached-python-setup
      with:
        python-version: '3.10'
        use-pip-cache: true

    - name: Test basic
      run: |
        source .venv/bin/activate
        export KEEP_MAX_DIFF=1
        export DISABLE_BREAKPOINTS=1
        # Run basic tests. If these fail others likely fail as well
        # NOTE that fast is a patched default in conftest.py
        pytest -xv -m "basic and length(speed='fast')"
    - name: Test with pytest
      run: |
        source .venv/bin/activate
        export KEEP_MAX_DIFF=1
        export DISABLE_BREAKPOINTS=1
        # Split tests because of deadlock
        # Test all others execluded by tests below
        pytest -k "not test_trainable" -m "not basic and length(speed='fast')" -v -x --fast
  test-standard-medium-length:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Python setup and install
      uses: ./.github/actions/cached-python-setup
      with:
        python-version: '3.10'
        use-pip-cache: true

    - name: Test basic (slower)
      continue-on-error: true  # might be 0 slow tests
      run: |
        source .venv/bin/activate
        export KEEP_MAX_DIFF=1
        export DISABLE_BREAKPOINTS=1
        # Run basic tests. If these fail others likely fail as well
        pytest -xv -m "basic and not length(speed='fast')"
    - name: Test with pytest
      run: |
        source .venv/bin/activate
        export KEEP_MAX_DIFF=1
        export DISABLE_BREAKPOINTS=1
        # Split tests because of deadlock
        # Test all others execluded by tests below
        pytest -k "not test_trainable" -m "not basic and not length(speed='fast')" -v -x --fast
  
  test-tuner-and-trainable:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Python setup and install
      uses: ./.github/actions/cached-python-setup
      with:
        python-version: '3.10'
        use-pip-cache: false
    - name: Test trainable 1/2 (might deadlock)
      run: |
        source .venv/bin/activate
        pytest test/test_trainable.py::TestClassCheckpointing::test_validate_save_restore -v --fast --timeout_method=thread
        # includes test_trainable_checkpointing
        pytest -m "not basic" -k "test_trainable and not test_tuner_checkpointing and not test_validate_save_restore" -v --fast
    - name: Test trainable with Tuner 2/2 (might deadlock)
      run: |
        source .venv/bin/activate
        pytest test/test_trainable.py::TestClassCheckpointing::test_tuner_checkpointing -v --fast --timeout_method=thread
  test-multiple-envrunners:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Python setup and install
      uses: ./.github/actions/cached-python-setup
      with:
        python-version: '3.10'
        use-pip-cache: false
    - name: Test trainable multiple EnvRunners 1/3
      run: |
        source .venv/bin/activate
        pytest -m "not basic" -k "test_trainable and not test_tuner_checkpointing and not test_validate_save_restore"  -v --timeout_method=thread --mp-only
    - name: Test trainable multiple EnvRunners metric restore 2/3 (might deadlock)
      run: |
        source .venv/bin/activate
        pytest test/test_setup.py::TestMetricsRestored::test_with_tuner --mp-only 
    - name: Test trainable multiple EnvRunners with Tuner 3/3 (might deadlock)
      run: |
        source .venv/bin/activate
        pytest test/test_trainable.py::TestClassCheckpointing::test_tuner_checkpointing -v --mp-only --timeout_method=thread
  
  pytest_minimal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Python setup and install
        uses: ./.github/actions/cached-python-setup
        with:
          python-version: '3.10'
          use-pip-cache: false
      - name: Run pyright minimally
        run: |
          source .venv/bin/activate
          pyright -p .basic_pyright_check.json
