# Composite action to set up Python, create a virtualenv, and install dependencies
name: 'Cached Python Setup'
description: 'Set up Python, create virtualenv, and install dependencies for testing.'
inputs:
  python-version:
    description: 'Python version to use'
    required: true
    default: '3.10'
  install-args:
    description: 'Arguments to pass to pip install'
    required: false
    default: .[test] pyright
  use-pip-cache:
    description: 'Whether to use pip cache'
    required: false
    default: false
runs:
  using: 'composite'
  steps:
    - name: Cache virtualenv
      id: cache-venv
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('setup.py') }}
        restore-keys: |
          venv-${{ runner.os }}-
    - name: Skip rest of job if cache hit
      if: ${{ steps.cache-venv.outputs.cache-hit == 'true' }}
      shell: bash
      run: echo "Cache hit, skipping rest of the job." && exit 0
    - name: Set up Python (with pip cache)
      if: ${{ inputs.use-pip-cache == 'true' }}
      id: setup-pip-cached
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}
        cache: 'pip'
        cache-dependency-path: setup.py
    - name: Set up Python (no pip cache)
      if: ${{ inputs.use-pip-cache != 'true' }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}
    - name: Report Cache hit
      shell: bash
      run: |
        if [ -z "${{ steps.cache-venv.outputs.cache-hit }}" ]; then
          echo "Cache hit for venv false"
        else
          echo "Cache hit for venv ${{ steps.cache-venv.outputs.cache-hit }}"
        fi
        if [ "${{ inputs.use-pip-cache }}" == "true" ]; then
          if [ -z "${{ steps.setup-pip-cached.outputs.cache-hit }}" ]; then
            echo "Cache hit for pip false"
          else
            echo "Cache hit for pip ${{ steps.setup-pip-cached.outputs.cache-hit }}"
          fi
        fi
    - name: Set composite outputs
      id: composite-outputs
      shell: bash
      run: |
        echo "venv-cache-hit=${{ steps.cache-venv.outputs.cache-hit }}" >> $GITHUB_OUTPUT
        echo "pip-cache-hit=${{ steps.setup-pip-cached.outputs.cache-hit }}" >> $GITHUB_OUTPUT
    - name: Set up virtualenv
      shell: bash
      run: python -m venv .venv
    - name: Install dependencies
      if: ${{ steps.cache-venv.outputs.cache-hit != 'true' }}
      shell: bash
      run: |
        source .venv/bin/activate
        pip install -U pip
        pip install ${{ inputs.install-args }}
